<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edupack.edu.service.mapper.UserMapper">

<resultMap id="userSelectMap" type="user">
	<result property="userId"         column="user_id"       	jdbcType="VARCHAR"/>
	<result property="pwd"         	  column="pwd"           	jdbcType="VARCHAR"/>
	<result property="nick"           column="nick"          	jdbcType="VARCHAR"/>
	<result property="birth"          column="birth"         	jdbcType="VARCHAR"/>
    <result property="profileImg"     column="profile_img"  	jdbcType="VARCHAR"/>
	<result property="intro"          column="intro"            jdbcType="VARCHAR"/>
	<result property="phone"          column="phone"            jdbcType="VARCHAR"/>
	<result property="locationNo"     column="location_no"      jdbcType="INTEGER"/>
	<result property="regDate"        column="reg_date"         jdbcType="DATE"/>
	<result property="address1"        column="address1"         jdbcType="VARCHAR"/>
	<result property="address2"        column="address2"         jdbcType="VARCHAR"/>
</resultMap>

<resultMap id="locationSelectMap" type="location">
	<result property="locationNo"     column="location_no"      jdbcType="INTEGER"/>
	<result property="locationName"   column="location_name"    jdbcType="VARCHAR"/>
</resultMap>


	<!-- SQL : 로그인, 유저 정보조회 -->
    <select    id="getUser"   parameterType="string"   resultMap="userSelectMap">
		SELECT u.user_id, u.pwd, u.nick, u.birth, ifnull(u.profile_img,'profile.png') AS profile_img , u.intro, 
			   u.phone, u.location_no, u.reg_date, 
			   u.address1, u.address2, l.location_name
		From user u, location l
		WHERE u.user_id = #{userId}
		AND u.location_no = l.location_no
    </select>
    
    
    <!-- SQL : 회원가입 -->
	 <insert    id="addUser"      parameterType="user" >
      INSERT
      INTO user (user_id, pwd, nick, birth, profile_img, intro, phone, location_no, reg_date, address1, address2)
      VALUES    (   #{userId : VARCHAR},
      			    #{pwd : VARCHAR},
      			    #{nick : VARCHAR},
      			    #{birth : VARCHAR},
      			    #{profileImg : VARCHAR},
      			    #{intro : VARCHAR},
      			    #{phone : VARCHAR},
      			    #{locationNo : INTEGER},
      			    SYSDATE(),  
      			    #{address1 : VARCHAR}, 
      			    #{address2 : VARCHAR} 
      			  )
    </insert>
    
    <!-- SQL : 아이디 중복체크 -->
    <select id = "checkId" parameterType="String"   resultType="integer">
   		SELECT COUNT(*)
		FROM user
		WHERE user_id= #{userId}
    </select>
    
     <!-- SQL : 닉네임 중복체크 -->
    <select id = "checkNick" parameterType="String"   resultType="integer">
   		SELECT COUNT(*)
		FROM user
		WHERE nick= #{nick}
    </select>
    
    <!-- 휴대폰 중복체크  -->
     <select id = "checkPhone" parameterType="String"   resultType="integer">
   		SELECT COUNT(*)
		FROM user
		WHERE phone= #{phone}
    </select>
    
     <!-- SQL : 회원정보 수정 -->
      <update   id="updateUser"   parameterType="user" >
         UPDATE user
         <set>
          profile_img = #{profileImg},
          nick  = #{nick},
          phone = #{phone},
          location_no = #{locationNo},
          intro =  #{intro}
         </set>
         WHERE user_Id = #{userId}
    </update>
    
    
    <!-- SQL : 아이디 찾기 -->
     <select id ="getUserId" parameterType="string"   resultMap="userSelectMap">  
	SELECT *
	FROM user
	WHERE phone = #{phone}
	</select>
	
	 <!-- SQL : 비밀번호 찾기 -->
	<select id ="getUserPwd" parameterType="map"   resultMap="userSelectMap">  
	SELECT *
	FROM user
	WHERE user_id = #{userId} 
	AND phone = #{phone}
	</select>
	 
	 <!-- SQL : 비밀번호 수정 -->
    <update   id="updatePwd"   parameterType="user" >
         UPDATE user
         <set>
            pwd = #{pwd}
         </set>
         WHERE user_id = #{userId}
    </update>
  
     <!-- SQL : 관심지역 가져오기(콤보)-->
     <select id ="getLocation" resultType="map" >
     SELECT 
     location_no, location_name
     FROM location 
     </select>
     
   <!-- SQL : 카테고리 가져오기(콤보)-->
    <select id ="getCateg" resultType="map" >
     SELECT 
     categ_no, categ_name
     FROM categ 
     </select>

 
    <!-- xpush관련 참가한 모임의 classno 가져오기(토픽타입으로 사용) -->
    <select id = "getJoinClassNo" parameterType="String"  resultType="map"> 
	SELECT class_no
	FROM join_class 
	WHERE user_id = #{user_id}
	</select>
    
    
	
</mapper>
